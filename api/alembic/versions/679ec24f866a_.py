"""empty message

Revision ID: 679ec24f866a
Revises: b0ed3ecd6d6f
Create Date: 2025-05-27 20:54:26.645757

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '679ec24f866a'
down_revision: Union[str, None] = 'b0ed3ecd6d6f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('node_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('dt_create', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_types_id'), 'node_types', ['id'], unique=False)
    op.create_table('sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('dt_create', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sections_id'), 'sections', ['id'], unique=False)
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('dt_create', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['node_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_table('node_node',
    sa.Column('node1_id', sa.Integer(), nullable=False),
    sa.Column('node2_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['node1_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['node2_id'], ['nodes.id'], ),
    sa.UniqueConstraint('node1_id', 'node2_id', name='unique_node_node')
    )
    op.create_table('node_type',
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['node_types.id'], ),
    sa.UniqueConstraint('node_id', 'type_id', name='unique_node_type')
    )
    op.create_table('section_node',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.UniqueConstraint('section_id', 'node_id', name='unique_section_node')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('section_node')
    op.drop_table('node_type')
    op.drop_table('node_node')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_sections_id'), table_name='sections')
    op.drop_table('sections')
    op.drop_index(op.f('ix_node_types_id'), table_name='node_types')
    op.drop_table('node_types')
    # ### end Alembic commands ###
